# Production Ingress Configuration with Load Balancing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: creditai-production-ingress
  namespace: creditai-production
  labels:
    app: creditai
    environment: production
  annotations:
    # Ingress Controller Annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # SSL/TLS Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.stripe.com; frame-src https://js.stripe.com; object-src 'none';" always;
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Load Balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # Connection Settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Health Checks
    nginx.ingress.kubernetes.io/health-check-path: "/api/health"
    nginx.ingress.kubernetes.io/health-check-interval: "30s"
    nginx.ingress.kubernetes.io/health-check-timeout: "5s"
    
    # Caching
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
      
      location /api/ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
      }
spec:
  tls:
  - hosts:
    - creditai.com
    - www.creditai.com
    - api.creditai.com
    secretName: creditai-production-tls
  rules:
  - host: creditai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: creditai-production
            port:
              number: 80
  - host: www.creditai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: creditai-production
            port:
              number: 80
  - host: api.creditai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: creditai-production
            port:
              number: 80

---
# API-specific Ingress with Enhanced Rate Limiting
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: creditai-api-ingress
  namespace: creditai-production
  labels:
    app: creditai
    environment: production
    type: api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Enhanced Rate Limiting for API
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "5"
    
    # API-specific headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-API-Version "1.0" always;
      add_header Access-Control-Allow-Origin "https://creditai.com" always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
spec:
  tls:
  - hosts:
    - api.creditai.com
    secretName: creditai-api-tls
  rules:
  - host: api.creditai.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: creditai-production
            port:
              number: 80

---
# Upload-specific Ingress with Higher Limits
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: creditai-upload-ingress
  namespace: creditai-production
  labels:
    app: creditai
    environment: production
    type: upload
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Higher limits for file uploads
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # Stricter rate limiting for uploads
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "2"
spec:
  tls:
  - hosts:
    - creditai.com
    secretName: creditai-production-tls
  rules:
  - host: creditai.com
    http:
      paths:
      - path: /api/upload
        pathType: Prefix
        backend:
          service:
            name: creditai-production
            port:
              number: 80